/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* eslint-disable @typescript-eslint/no-explicit-any */
const isLatLngLiteral = (obj) => obj != null &&
    typeof obj === "object" &&
    Number.isFinite(obj.lat) &&
    Number.isFinite(obj.lng);
const isLatLngOrLatLngLiteral = (obj) => obj instanceof google.maps.LatLng || isLatLngLiteral(obj);

/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const isMapDirectionsOptionsLiteral = (obj) => obj != null && typeof obj === "object" && isLatLngOrLatLngLiteral(obj.origin);

/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var index = /*#__PURE__*/Object.freeze({
    __proto__: null,
    isMapDirectionsOptionsLiteral: isMapDirectionsOptionsLiteral
});

/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const isCircleLiteral = (obj) => obj != null &&
    typeof obj === "object" &&
    isLatLngOrLatLngLiteral(obj.center) &&
    Number.isFinite(obj.radius);
const isCircleOrCircleLiteral = (obj) => obj instanceof google.maps.Circle || isCircleLiteral(obj);

/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* eslint-disable @typescript-eslint/no-explicit-any */
const isLatLngBoundsLiteral = (obj) => obj != null &&
    typeof obj === "object" &&
    Number.isFinite(obj.east) &&
    Number.isFinite(obj.north) &&
    Number.isFinite(obj.south) &&
    Number.isFinite(obj.west);
const isLatLngBoundsOrLatLngBoundsLiteral = (obj) => obj instanceof google.maps.LatLngBounds || isLatLngBoundsLiteral(obj);

export { isCircleLiteral, isCircleOrCircleLiteral, isLatLngBoundsLiteral, isLatLngBoundsOrLatLngBoundsLiteral, isLatLngLiteral, isLatLngOrLatLngLiteral, index as localContext };
